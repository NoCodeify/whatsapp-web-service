name: 🚀 Deploy WhatsApp Web Service

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

env:
  REGION: europe-central2
  REPOSITORY: whatsapp-repo
  SERVICE_NAME: whatsapp-web-service

jobs:
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Lint code
        run: npx prettier --check .

      - name: 🏗️ Build TypeScript
        run: npm run build

      - name: 🧪 Run tests
        run: npm test

  build-and-deploy-dev:
    name: 🚀 Deploy to Development
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment: development

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 🛠️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 🔍 Debug Authentication
        run: |
          echo "Active account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"
          echo "Current project:"
          gcloud config get-value project

      - name: 🔧 Activate Service Account
        run: |
          echo "Setting active account to whatsapp-service..."
          gcloud config set account whatsapp-service@whatzaidev.iam.gserviceaccount.com
          echo "Verifying active account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"

      - name: 🔧 Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: 🏗️ Build and deploy with Cloud Build
        run: |
          gcloud builds submit \
            --config cloudbuild-dev.yaml \
            --project whatzaidev \
            --region ${{ env.REGION }} \
            --impersonate-service-account=whatsapp-service@whatzaidev.iam.gserviceaccount.com

      - name: 🔍 Verify deployment
        run: |
          # Get service URL
          SERVICE_URL=$(gcloud run services describe whatsapp-web-service-dev \
            --region=${{ env.REGION }} \
            --project=whatzaidev \
            --format='value(status.url)')

          echo "🌐 Development service deployed at: ${SERVICE_URL}"

          # Health check
          curl -f "${SERVICE_URL}/health" || exit 1
          echo "✅ Development health check passed!"

  build-and-deploy-prod:
    name: 🚀 Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
    environment: production

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}

      - name: 🛠️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 🔍 Debug Authentication
        run: |
          echo "Active account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"
          echo "Current project:"
          gcloud config get-value project

      - name: 🔧 Activate Service Account
        run: |
          echo "Setting active account to whatsapp-service..."
          gcloud config set account whatsapp-service@whatzai.iam.gserviceaccount.com
          echo "Verifying active account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"

      - name: 🔧 Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: 🏗️ Build and deploy to production
        run: |
          gcloud builds submit \
            --config cloudbuild.yaml \
            --project whatzai \
            --region ${{ env.REGION }} \
            --impersonate-service-account=whatsapp-service@whatzai.iam.gserviceaccount.com

      - name: 🔍 Verify production deployment
        run: |
          # Get service URL
          SERVICE_URL=$(gcloud run services describe whatsapp-web-service \
            --region=${{ env.REGION }} \
            --project=whatzai \
            --format='value(status.url)')

          echo "🌐 Production service deployed at: ${SERVICE_URL}"

          # Health check
          curl -f "${SERVICE_URL}/health" || exit 1
          echo "✅ Production health check passed!"

      - name: 📊 Update production URL secret
        run: |
          SERVICE_URL=$(gcloud run services describe whatsapp-web-service \
            --region=${{ env.REGION }} \
            --project=whatzai \
            --format='value(status.url)')

          echo -n "${SERVICE_URL}" | gcloud secrets versions add WHATSAPP_WEB_SERVICE_URL_PROD \
            --project=whatzai --data-file=-

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run security audit
        run: npm audit --audit-level moderate

      - name: 🔒 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: 🔒 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
