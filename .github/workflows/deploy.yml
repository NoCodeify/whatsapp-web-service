name: 🚀 Deploy WhatsApp Web Service

on:
  push:
    branches: [main] # Auto-deploy to dev on main branch push
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod
      confirm_production:
        description: "I confirm this has been tested in dev and is ready for production"
        required: false
        default: false
        type: boolean

env:
  REGION: europe-central2
  REPOSITORY: whatsapp-repo
  SERVICE_NAME: whatsapp-web-service

jobs:
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Lint code
        run: npx prettier --check .

      - name: 🏗️ Build TypeScript
        run: npm run build

      - name: 🧪 Run tests
        run: npm test

  build-and-deploy-dev:
    name: 🚀 Deploy to Development
    needs: test
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment: development
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 🛠️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 🔍 Debug Authentication
        run: |
          echo "Active account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"
          echo "Current project:"
          gcloud config get-value project

      - name: 🔧 Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: 🏗️ Build and deploy with Cloud Build
        run: |
          gcloud builds submit \
            --config cloudbuild-dev.yaml \
            --project whatzaidev \
            --region ${{ env.REGION }}

      - name: 🔍 Verify deployment
        run: |
          # Get service URL
          SERVICE_URL=$(gcloud run services describe whatsapp-web-service-dev \
            --region=${{ env.REGION }} \
            --project=whatzaidev \
            --format='value(status.url)')

          echo "🌐 Development service deployed at: ${SERVICE_URL}"

          # Health check
          curl -f "${SERVICE_URL}/health" || exit 1
          echo "✅ Development health check passed!"

  build-and-deploy-prod:
    name: 🚀 Deploy to Production (Manual Approval Required)
    needs: [test, build-and-deploy-dev] # Must deploy to dev first
    runs-on: ubuntu-latest
    # Only manual workflow_dispatch with explicit confirmation
    if: |
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.environment == 'prod' &&
      github.event.inputs.confirm_production == 'true'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}

      - name: 🛠️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 🔍 Debug Authentication
        run: |
          echo "Active account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"
          echo "Current project:"
          gcloud config get-value project

      - name: 🔧 Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: 🛡️ Pre-deployment verification
        run: |
          echo "🔍 Verifying dev deployment is healthy before production deployment..."
          DEV_URL="https://whatsapp-web-service-dev-123456-ew.a.run.app"  # Update with actual dev URL

          # Verify dev is healthy
          echo "Checking dev health endpoint..."
          DEV_HEALTH=$(curl -s "${DEV_URL}/health" | jq -r '.status')
          if [[ "$DEV_HEALTH" != "healthy" ]]; then
            echo "❌ Dev deployment is not healthy. Status: $DEV_HEALTH"
            echo "Production deployment blocked for safety."
            exit 1
          fi
          echo "✅ Dev deployment is healthy, proceeding with production deployment"

      - name: 🏗️ Build and deploy to production
        id: deploy
        run: |
          gcloud builds submit \
            --config cloudbuild-prod.yaml \
            --project whatzai-prod \
            --region ${{ env.REGION }}

      - name: 🔍 Verify production deployment
        run: |
          # Get service URL
          SERVICE_URL=$(gcloud run services describe whatsapp-web-service-prod \
            --region=${{ env.REGION }} \
            --project=whatzai-prod \
            --format='value(status.url)')

          echo "🌐 Production service deployed at: ${SERVICE_URL}"
          echo "url=${SERVICE_URL}" >> $GITHUB_OUTPUT

          # Wait for service to be ready
          echo "⏳ Waiting for production service to be ready..."
          sleep 30

          # Health check with retries
          for i in {1..5}; do
            if curl -f "${SERVICE_URL}/health" --max-time 30; then
              echo "✅ Production health check passed!"
              break
            else
              echo "⚠️ Health check attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi

            if [ $i -eq 5 ]; then
              echo "❌ Production health check failed after 5 attempts"
              exit 1
            fi
          done

      - name: 📋 Deployment Summary
        if: success()
        run: |
          echo "🎉 Production deployment completed successfully!"
          echo ""
          echo "📊 Deployment Summary:"
          echo "- Environment: Production"
          echo "- Triggered by: ${{ github.actor }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Dev tested: ✅ Required"
          echo "- Manual approval: ✅ Confirmed"
          echo "- Health check: ✅ Passed"
          echo ""
          echo "🔗 Service URL: ${{ steps.deploy.outputs.url }}"

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run security audit
        run: npm audit --audit-level moderate
        continue-on-error: true # Don't fail PR on audit warnings

      - name: 🔒 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: 🔒 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
